import django_filters
from django import forms
from .models import Product, Category


class ProductFilter(django_filters.FilterSet):\n    \"\"\"\n    Advanced filtering for products with multiple criteria\n    \"\"\"\n    # Price range filtering\n    min_price = django_filters.NumberFilter(\n        field_name='price', \n        lookup_expr='gte',\n        widget=forms.NumberInput(attrs={'placeholder': 'Min Price'})\n    )\n    max_price = django_filters.NumberFilter(\n        field_name='price', \n        lookup_expr='lte',\n        widget=forms.NumberInput(attrs={'placeholder': 'Max Price'})\n    )\n    \n    # Category filtering\n    category = django_filters.ModelChoiceFilter(\n        queryset=Category.objects.filter(is_active=True),\n        empty_label=\"All Categories\"\n    )\n    \n    # Availability filtering\n    availability = django_filters.ChoiceFilter(\n        choices=Product.AVAILABILITY_CHOICES,\n        empty_label=\"All Availability Status\"\n    )\n    \n    # Spice level filtering\n    spice_level = django_filters.ChoiceFilter(\n        choices=Product.SPICE_LEVEL_CHOICES,\n        empty_label=\"All Spice Levels\"\n    )\n    \n    # Boolean filters for dietary preferences\n    is_vegetarian = django_filters.BooleanFilter(\n        widget=forms.CheckboxInput()\n    )\n    is_vegan = django_filters.BooleanFilter(\n        widget=forms.CheckboxInput()\n    )\n    is_gluten_free = django_filters.BooleanFilter(\n        widget=forms.CheckboxInput()\n    )\n    is_featured = django_filters.BooleanFilter(\n        widget=forms.CheckboxInput()\n    )\n    \n    # Preparation time range\n    max_prep_time = django_filters.NumberFilter(\n        field_name='preparation_time',\n        lookup_expr='lte',\n        widget=forms.NumberInput(attrs={'placeholder': 'Max Prep Time (min)'})\n    )\n    \n    # Calorie range\n    max_calories = django_filters.NumberFilter(\n        field_name='calories',\n        lookup_expr='lte',\n        widget=forms.NumberInput(attrs={'placeholder': 'Max Calories'})\n    )\n    \n    # Rating filter\n    min_rating = django_filters.NumberFilter(\n        field_name='rating_average',\n        lookup_expr='gte',\n        widget=forms.NumberInput(attrs={'placeholder': 'Min Rating', 'step': '0.1', 'min': '0', 'max': '5'})\n    )\n    \n    # Search in specific fields\n    name = django_filters.CharFilter(\n        lookup_expr='icontains',\n        widget=forms.TextInput(attrs={'placeholder': 'Search by name'})\n    )\n    \n    ingredients = django_filters.CharFilter(\n        lookup_expr='icontains',\n        widget=forms.TextInput(attrs={'placeholder': 'Search ingredients'})\n    )\n    \n    # Stock availability\n    in_stock = django_filters.BooleanFilter(\n        method='filter_in_stock',\n        widget=forms.CheckboxInput()\n    )\n    \n    class Meta:\n        model = Product\n        fields = {\n            'name': ['icontains'],\n            'category': ['exact'],\n            'price': ['gte', 'lte'],\n            'availability': ['exact'],\n            'spice_level': ['exact'],\n            'is_vegetarian': ['exact'],\n            'is_vegan': ['exact'],\n            'is_gluten_free': ['exact'],\n            'is_featured': ['exact'],\n            'preparation_time': ['lte'],\n            'calories': ['lte'],\n            'rating_average': ['gte'],\n        }\n    \n    def filter_in_stock(self, queryset, name, value):\n        \"\"\"\n        Filter products that are in stock\n        \"\"\"\n        if value:\n            return queryset.filter(\n                stock_quantity__gt=0,\n                availability='available'\n            )\n        return queryset\n\n\nclass CategoryFilter(django_filters.FilterSet):\n    \"\"\"\n    Filtering for categories\n    \"\"\"\n    name = django_filters.CharFilter(\n        lookup_expr='icontains',\n        widget=forms.TextInput(attrs={'placeholder': 'Search by name'})\n    )\n    \n    is_active = django_filters.BooleanFilter(\n        widget=forms.CheckboxInput()\n    )\n    \n    class Meta:\n        model = Category\n        fields = {\n            'name': ['icontains'],\n            'is_active': ['exact'],\n        }